// Generated by CoffeeScript 1.9.3
(function() {
  var alert;

  alert = window.alert;

  module.exports = function(gui) {
    var EthProcess, EthosMenu, IPFSProcess, ext, os, path, spawn, web3;
    process.on('uncaughtException', function(msg) {
      return alert("Error: Uncaught exexption: " + msg);
    });
    os = process.platform;
    ext = '';
    if (os === 'win32') {
      ext = '.exe';
    }
    path = require('path');
    web3 = require('web3');
    spawn = require('child_process').spawn;
    EthosMenu = require('./EthosMenu.coffee');
    EthProcess = require('./EthProcess.coffee');
    IPFSProcess = require('./IPFSProcess.coffee');
    console.log("Ξthos initializing...");
    web3.connect = function(ethMenu) {
      var connect, tries;
      tries = 0;
      connect = function() {
        var error;
        try {
          web3.setProvider(new web3.providers.HttpProvider('http://localhost:8545'));
          console.log("Ethereum coinbase: ", web3.eth.coinbase);
          return console.log("Ethereum accounts: ", web3.eth.accounts);
        } catch (_error) {
          error = _error;
          console.log("Error connecting to local Ethereum node");
          console.log(error);
          tries++;
          if (tries < 10) {
            return setTimeout(connect, 100);
          }
        }
      };
      return setTimeout(connect, 100);
    };
    return window.onload = function() {
      var ethProcess, ipfsProcess, menu;
      ethProcess = new EthProcess({
        os: os,
        ext: ext
      });
      ipfsProcess = new IPFSProcess({
        os: os,
        ext: ext
      });
      menu = new EthosMenu({
        gui: gui,
        ipfsProcess: ipfsProcess,
        ethProcess: ethProcess
      });
      ethProcess.start();
      ipfsProcess.start();
      ethProcess.on('status', function(running) {
        if (running) {
          return web3.connect();
        }
      });
      return console.log("Ξthos initialized: ok");
    };
  };

}).call(this);
